# R versions: 4.2, oldrel, release,  devel

# os: windows-latest, macOS-latest, ubuntu-latest

# rust version for windows: stable-msvc, nightly-msvc, stable-gnu
# rust version for mac and ubuntu: nightly, stable

# targets for ubuntu: aarch64-unknown-linux-gnu and the default
# targets for windows: is always x86_64-pc-windows-gnu
# targets for mac: x86_64-apple-darwin and the default

# steps:
# - actions/checkout@v4
# - r-lib/actions/setup-r@v2
# this uses the `r-version` input
# - dtolnay/rust-toolchain@stable
# this uses the targets and toolchain inputs
name: Build Matrix

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
          # Windows Configurations
          - {
              os: windows-latest,
              r-version: "4.2",
              rust: stable-msvc,
              target: x86_64-pc-windows-gnu,
            }
          - {
              os: windows-latest,
              r-version: "oldrel",
              rust: stable-msvc,
              target: x86_64-pc-windows-gnu,
            }
          - {
              os: windows-latest,
              r-version: "release",
              rust: stable-msvc,
              target: x86_64-pc-windows-gnu,
            }
          - {
              os: windows-latest,
              r-version: "release",
              rust: nightly-msvc,
              target: x86_64-pc-windows-gnu,
            }
          - {
              os: windows-latest,
              r-version: "release",
              rust: stable-gnu,
              target: x86_64-pc-windows-gnu,
            }
          - {
              os: windows-latest,
              r-version: "devel",
              rust: stable-msvc,
              target: x86_64-pc-windows-gnu,
            }

          # macOS Configurations
          - {
              os: macOS-latest,
              r-version: "4.2",
              rust: stable,
              target: x86_64-apple-darwin,
            }
          - { os: macOS-latest, r-version: "4.2", rust: stable }
          - {
              os: macOS-latest,
              r-version: "oldrel",
              rust: stable,
              target: x86_64-apple-darwin,
            }
          - {
              os: macOS-latest,
              r-version: "release",
              rust: stable,
              target: x86_64-apple-darwin,
            }
          - { os: macOS-latest, r-version: "release", rust: stable }
          - {
              os: macOS-latest,
              r-version: "release",
              rust: nightly,
              target: x86_64-apple-darwin,
            }
          - { os: macOS-latest, r-version: "devel", rust: stable }

          # Ubuntu Configurations
          - {
              os: ubuntu-latest,
              r-version: "4.2",
              rust: stable,
              target: aarch64-unknown-linux-gnu,
            }
          - { os: ubuntu-latest, r-version: "4.2", rust: stable }

          - {
              os: ubuntu-latest,
              r-version: "oldrel",
              rust: stable,
              target: aarch64-unknown-linux-gnu,
            }
          - { os: ubuntu-latest, r-version: "oldrel", rust: stable }

          - {
              os: ubuntu-latest,
              r-version: "release",
              rust: stable,
              target: aarch64-unknown-linux-gnu,
            }
          - { os: ubuntu-latest, r-version: "release", rust: stable }
          - { os: ubuntu-latest, r-version: "release", rust: nightly }

          - {
              os: ubuntu-latest,
              r-version: "devel",
              rust: stable,
              target: aarch64-unknown-linux-gnu,
            }
          - { os: ubuntu-latest, r-version: "devel", rust: stable }

    runs-on: ${{ matrix.config.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r-version }}

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.config.rust }}
          targets: ${{ matrix.config.target }}

      - name: Build
        run: cargo build
